// Name:            Off-canvas
// Description:     Component to create an off-canvas sidebar
//
// Component:       `pm24sc-offcanvas`
//
// Sub-objects:     `pm24sc-offcanvas-bar`
//                  `pm24sc-offcanvas-container`
//                  `pm24sc-offcanvas-page`
//
// Adopted:         `pm24sc-offcanvas-close`
//
// Modifiers:       `pm24sc-offcanvas-flip`
//                  `pm24sc-offcanvas-bar-animation`
//                  `pm24sc-offcanvas-reveal`
//                  `pm24sc-offcanvas-overlay`
//                  `pm24sc-offcanvas-container-animation`
//
// States:          `pm24sc-open`
//
// ========================================================================


// Variables
// ========================================================================

$offcanvas-z-index:                              $global-z-index !default;

$offcanvas-bar-width:                            270px !default;
$offcanvas-bar-padding-vertical:                 $global-margin !default;
$offcanvas-bar-padding-horizontal:               $global-margin !default;
$offcanvas-bar-background:                       $global-secondary-background !default;
$offcanvas-bar-color-mode:                       light !default;

$offcanvas-bar-width-m:                          350px !default;
$offcanvas-bar-padding-vertical-m:               $global-medium-gutter !default;
$offcanvas-bar-padding-horizontal-m:             $global-medium-gutter !default;

$offcanvas-close-position:                       20px !default;
$offcanvas-close-padding:                        5px !default;

$offcanvas-overlay-background:                   rgba(0,0,0,0.1) !default;


/* ========================================================================
   Component: Off-canvas
 ========================================================================== */

/*
 * 1. Hide by default
 * 2. Set position
 */

.pm24sc-offcanvas {
    /* 1 */
    display: none;
    /* 2 */
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    z-index: $offcanvas-z-index;
}

/*
 * Flip modifier
 */

.pm24sc-offcanvas-flip .pm24sc-offcanvas {
    right: 0;
    left: auto;
}


/* Bar
 ========================================================================== */

/*
 * 1. Set position
 * 2. Size and style
 * 3. Allow scrolling
 */

.pm24sc-offcanvas-bar {
    /* 1 */
    position: absolute;
    top: 0;
    bottom: 0;
    left: (-$offcanvas-bar-width);
    /* 2 */
    box-sizing: border-box;
    width: $offcanvas-bar-width;
    padding: $offcanvas-bar-padding-vertical $offcanvas-bar-padding-horizontal;
    background: $offcanvas-bar-background;
    /* 3 */
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    @if(mixin-exists(hook-offcanvas-bar)) {@include hook-offcanvas-bar();}
}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    .pm24sc-offcanvas-bar {
        left: (-$offcanvas-bar-width-m);
        width: $offcanvas-bar-width-m;
        padding: $offcanvas-bar-padding-vertical-m $offcanvas-bar-padding-horizontal-m;
    }

}

// Color Mode
@if ( $offcanvas-bar-color-mode == light ) { .pm24sc-offcanvas-bar { @extend .pm24sc-light !optional;} }
@if ( $offcanvas-bar-color-mode == dark ) { .pm24sc-offcanvas-bar { @extend .pm24sc-dark !optional;} }

/* Flip modifier */
.pm24sc-offcanvas-flip .pm24sc-offcanvas-bar {
    left: auto;
    right: (-$offcanvas-bar-width);
}

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    .pm24sc-offcanvas-flip .pm24sc-offcanvas-bar { right: (-$offcanvas-bar-width-m); }

}

/*
 * Open
 */

.pm24sc-open > .pm24sc-offcanvas-bar { left: 0; }
.pm24sc-offcanvas-flip .pm24sc-open > .pm24sc-offcanvas-bar {
    left: auto;
    right: 0;
}

/*
 * Slide Animation (Used in slide and push mode)
 */

.pm24sc-offcanvas-bar-animation { transition: left 0.3s ease-out; }
.pm24sc-offcanvas-flip .pm24sc-offcanvas-bar-animation { transition-property: right; }

/*
 * Reveal Animation
 * 1. Set position
 * 2. Clip the bar
 * 3. Animation
 * 4. Reset position
 */

.pm24sc-offcanvas-reveal {
    /* 1 */
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    /* 2 */
    width: 0;
    overflow: hidden;
    /* 3 */
    transition: width 0.3s ease-out;
}

.pm24sc-offcanvas-reveal .pm24sc-offcanvas-bar {
    /* 4 */
    left: 0;
}

.pm24sc-offcanvas-flip .pm24sc-offcanvas-reveal .pm24sc-offcanvas-bar {
    /* 4 */
    left: auto;
    right: 0;
}

.pm24sc-open > .pm24sc-offcanvas-reveal { width: $offcanvas-bar-width; }

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    .pm24sc-open > .pm24sc-offcanvas-reveal { width: $offcanvas-bar-width-m; }

}

/*
 * Flip modifier
 */

.pm24sc-offcanvas-flip .pm24sc-offcanvas-reveal {
    right: 0;
    left: auto;
}


/* Close
 * Adopts `pm24sc-close`
 ========================================================================== */

.pm24sc-offcanvas-close {
    position: absolute;
    z-index: $offcanvas-z-index;
    top: $offcanvas-close-position;
    right: $offcanvas-close-position;
    padding: $offcanvas-close-padding;
    @if(mixin-exists(hook-offcanvas-close)) {@include hook-offcanvas-close();}
}


/* Overlay
 ========================================================================== */

/*
 * Overlay the whole page. Needed for the `::before`
 * 1. Using `100vw` so no modification is needed when off-canvas is flipped
 * 2. Allow for closing with swipe gesture on devices with pointer events.
 */

.pm24sc-offcanvas-overlay {
    /* 1 */
    width: 100vw;
    /* 2 */
    touch-action: none;
}

/*
 * 1. Mask the whole page
 * 2. Fade-in transition
 */

.pm24sc-offcanvas-overlay::before {
    /* 1 */
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: $offcanvas-overlay-background;
    /* 2 */
    opacity: 0;
    transition: opacity 0.15s linear;
    @if(mixin-exists(hook-offcanvas-overlay)) {@include hook-offcanvas-overlay();}
}

.pm24sc-offcanvas-overlay.pm24sc-open::before { opacity: 1; }


/* Prevent scrolling
 ========================================================================== */

/*
 * Prevent horizontal scrollbar when the content is slide-out
 * Has to be on the `html` element too to make it work on the `body`
 */

.pm24sc-offcanvas-page,
.pm24sc-offcanvas-container { overflow-x: hidden; }


/* Container
 ========================================================================== */

/*
 * Prepare slide-out animation (Used in reveal and push mode)
 * Using `position: left` instead of `transform` because position `fixed` elements like sticky navbars
 * lose their fixed state and behaves like `absolute` within a transformed container
 * 1. Provide a fixed width and prevent shrinking
 */

.pm24sc-offcanvas-container {
    position: relative;
    left: 0;
    transition: left 0.3s ease-out;
    /* 1 */
    box-sizing: border-box;
    width: 100%;
}

/*
 * Activate slide-out animation
 */

:not(.pm24sc-offcanvas-flip).pm24sc-offcanvas-container-animation { left: $offcanvas-bar-width; }

.pm24sc-offcanvas-flip.pm24sc-offcanvas-container-animation { left: (-$offcanvas-bar-width); }

/* Tablet landscape and bigger */
@media (min-width: $breakpoint-medium) {

    :not(.pm24sc-offcanvas-flip).pm24sc-offcanvas-container-animation { left: $offcanvas-bar-width-m; }

    .pm24sc-offcanvas-flip.pm24sc-offcanvas-container-animation { left: (-$offcanvas-bar-width-m); }

}


// Hooks
// ========================================================================

@if(mixin-exists(hook-offcanvas-misc)) {@include hook-offcanvas-misc();}

// @mixin hook-offcanvas-bar(){}
// @mixin hook-offcanvas-close(){}
// @mixin hook-offcanvas-overlay(){}
// @mixin hook-offcanvas-misc(){}
